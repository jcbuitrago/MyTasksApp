services:
  db:
    image: postgres:15.5
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # Para hacer debug the la db
    # ports:
    #   - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    image: mytasks-backend:latest
    container_name: backend
    environment:
      DB_HOST: db
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - app-backend
      - app-frontend
    restart: unless-stopped



  frontend:
    build: ./frontend
    image: mytasks-frontend:latest
    container_name: frontend
    ports:
      - "3000:80"
    networks:
      - app-frontend
    depends_on:
      - backend

networks:
  app-backend:
  app-frontend:

volumes:
  pgdata:
